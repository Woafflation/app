// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TriggerForm smoke 1`] = `
<TriggerForm
  data={
    Array [
      Object {
        "slug": "santiment",
      },
    ]
  }
  isTelegramConnected={true}
  onSettingsChange={[MockFunction]}
>
  <Formik
    enableReinitialize={false}
    initialValues={
      Object {
        "percentThreshold": 5,
      }
    }
    isInitialValid={true}
    onChange={[Function]}
    onSubmit={[Function]}
    validate={[Function]}
    validateOnBlur={true}
    validateOnChange={true}
  >
    <Form>
      <Component
        formik={
          Object {
            "dirty": false,
            "errors": Object {},
            "handleBlur": [Function],
            "handleChange": [Function],
            "handleReset": [Function],
            "handleSubmit": [Function],
            "initialValues": Object {
              "percentThreshold": 5,
            },
            "isSubmitting": false,
            "isValid": true,
            "isValidating": false,
            "registerField": [Function],
            "resetForm": [Function],
            "setError": [Function],
            "setErrors": [Function],
            "setFieldError": [Function],
            "setFieldTouched": [Function],
            "setFieldValue": [Function],
            "setFormikState": [Function],
            "setStatus": [Function],
            "setSubmitting": [Function],
            "setTouched": [Function],
            "setValues": [Function],
            "status": undefined,
            "submitCount": 0,
            "submitForm": [Function],
            "touched": Object {},
            "unregisterField": [Function],
            "validate": [Function],
            "validateField": [Function],
            "validateForm": [Function],
            "validateOnBlur": true,
            "validateOnChange": true,
            "validationSchema": undefined,
            "values": Object {
              "percentThreshold": 5,
            },
          }
        }
      >
        <form
          onReset={[Function]}
          onSubmit={[Function]}
        >
          <div
            className="row"
          >
            <label>
              Metrics
            </label>
          </div>
          <div
            className="row"
          >
            <div
              className="Field"
            >
              <VirtualizedSelect
                async={false}
                disabled={true}
                maxHeight={200}
                onChange={[Function]}
                optionHeight={35}
                options={
                  Array [
                    Object {
                      "label": "Price",
                      "value": "price",
                    },
                    Object {
                      "label": "Trending Words",
                      "value": "trendingWords",
                    },
                  ]
                }
                placeholder="Choose a metric"
                value="price"
              >
                <Select
                  arrowRenderer={[Function]}
                  async={false}
                  autosize={true}
                  backspaceRemoves={true}
                  backspaceToRemoveMessage="Press backspace to remove {label}"
                  clearAllText="Clear all"
                  clearRenderer={[Function]}
                  clearValueText="Clear value"
                  clearable={true}
                  closeOnSelect={true}
                  deleteRemoves={true}
                  delimiter=","
                  disabled={true}
                  escapeClearsValue={true}
                  filterOptions={[Function]}
                  ignoreAccents={true}
                  ignoreCase={true}
                  inputProps={Object {}}
                  isLoading={false}
                  joinValues={false}
                  labelKey="label"
                  matchPos="any"
                  matchProp="any"
                  maxHeight={200}
                  menuBuffer={0}
                  menuRenderer={[Function]}
                  menuStyle={
                    Object {
                      "overflow": "hidden",
                    }
                  }
                  multi={false}
                  noResultsText="No results found"
                  onBlurResetsInput={true}
                  onChange={[Function]}
                  onCloseResetsInput={true}
                  onSelectResetsInput={true}
                  openOnClick={true}
                  optionComponent={[Function]}
                  optionHeight={35}
                  options={
                    Array [
                      Object {
                        "label": "Price",
                        "value": "price",
                      },
                      Object {
                        "label": "Trending Words",
                        "value": "trendingWords",
                      },
                    ]
                  }
                  pageSize={5}
                  placeholder="Choose a metric"
                  removeSelected={true}
                  required={false}
                  rtl={false}
                  scrollMenuIntoView={true}
                  searchable={true}
                  simpleValue={false}
                  tabSelectsValue={true}
                  trimFilter={true}
                  value="price"
                  valueComponent={[Function]}
                  valueKey="value"
                >
                  <div
                    className="Select has-value is-clearable is-disabled is-searchable Select--single"
                  >
                    <div
                      className="Select-control"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                    >
                      <div
                        className="Select-multi-value-wrapper"
                        id="react-select-2--value"
                      >
                        <Value
                          disabled={true}
                          id="react-select-2--value-item"
                          instancePrefix="react-select-2-"
                          onClick={null}
                          placeholder="Choose a metric"
                          value={
                            Object {
                              "label": "Price",
                              "value": "price",
                            }
                          }
                        >
                          <div
                            className="Select-value"
                          >
                            <span
                              aria-selected="true"
                              className="Select-value-label"
                              id="react-select-2--value-item"
                              role="option"
                            >
                              Price
                            </span>
                          </div>
                        </Value>
                        <div
                          aria-activedescendant="react-select-2--value"
                          aria-disabled="true"
                          aria-expanded={false}
                          aria-owns=""
                          className="Select-input"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          role="combobox"
                          style={
                            Object {
                              "border": 0,
                              "display": "inline-block",
                              "width": 1,
                            }
                          }
                          tabIndex={0}
                        />
                      </div>
                      <span
                        className="Select-arrow-zone"
                        onMouseDown={[Function]}
                      >
                        <span
                          className="Select-arrow"
                          onMouseDown={[Function]}
                        />
                      </span>
                    </div>
                  </div>
                </Select>
              </VirtualizedSelect>
            </div>
            <div
              className="Field"
            >
              <VirtualizedSelect
                async={false}
                disabled={true}
                maxHeight={200}
                onChange={[Function]}
                optionHeight={35}
                options={
                  Array [
                    Object {
                      "label": "Percentage changes",
                      "value": "price_percent_change",
                    },
                    Object {
                      "label": "Absolute",
                      "value": "price_absolute_change",
                    },
                  ]
                }
                placeholder="Choose an option"
                value="price_percent_change"
              >
                <Select
                  arrowRenderer={[Function]}
                  async={false}
                  autosize={true}
                  backspaceRemoves={true}
                  backspaceToRemoveMessage="Press backspace to remove {label}"
                  clearAllText="Clear all"
                  clearRenderer={[Function]}
                  clearValueText="Clear value"
                  clearable={true}
                  closeOnSelect={true}
                  deleteRemoves={true}
                  delimiter=","
                  disabled={true}
                  escapeClearsValue={true}
                  filterOptions={[Function]}
                  ignoreAccents={true}
                  ignoreCase={true}
                  inputProps={Object {}}
                  isLoading={false}
                  joinValues={false}
                  labelKey="label"
                  matchPos="any"
                  matchProp="any"
                  maxHeight={200}
                  menuBuffer={0}
                  menuRenderer={[Function]}
                  menuStyle={
                    Object {
                      "overflow": "hidden",
                    }
                  }
                  multi={false}
                  noResultsText="No results found"
                  onBlurResetsInput={true}
                  onChange={[Function]}
                  onCloseResetsInput={true}
                  onSelectResetsInput={true}
                  openOnClick={true}
                  optionComponent={[Function]}
                  optionHeight={35}
                  options={
                    Array [
                      Object {
                        "label": "Percentage changes",
                        "value": "price_percent_change",
                      },
                      Object {
                        "label": "Absolute",
                        "value": "price_absolute_change",
                      },
                    ]
                  }
                  pageSize={5}
                  placeholder="Choose an option"
                  removeSelected={true}
                  required={false}
                  rtl={false}
                  scrollMenuIntoView={true}
                  searchable={true}
                  simpleValue={false}
                  tabSelectsValue={true}
                  trimFilter={true}
                  value="price_percent_change"
                  valueComponent={[Function]}
                  valueKey="value"
                >
                  <div
                    className="Select has-value is-clearable is-disabled is-searchable Select--single"
                  >
                    <div
                      className="Select-control"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                    >
                      <div
                        className="Select-multi-value-wrapper"
                        id="react-select-3--value"
                      >
                        <Value
                          disabled={true}
                          id="react-select-3--value-item"
                          instancePrefix="react-select-3-"
                          onClick={null}
                          placeholder="Choose an option"
                          value={
                            Object {
                              "label": "Percentage changes",
                              "value": "price_percent_change",
                            }
                          }
                        >
                          <div
                            className="Select-value"
                          >
                            <span
                              aria-selected="true"
                              className="Select-value-label"
                              id="react-select-3--value-item"
                              role="option"
                            >
                              Percentage changes
                            </span>
                          </div>
                        </Value>
                        <div
                          aria-activedescendant="react-select-3--value"
                          aria-disabled="true"
                          aria-expanded={false}
                          aria-owns=""
                          className="Select-input"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          role="combobox"
                          style={
                            Object {
                              "border": 0,
                              "display": "inline-block",
                              "width": 1,
                            }
                          }
                          tabIndex={0}
                        />
                      </div>
                      <span
                        className="Select-arrow-zone"
                        onMouseDown={[Function]}
                      >
                        <span
                          className="Select-arrow"
                          onMouseDown={[Function]}
                        />
                      </span>
                    </div>
                  </div>
                </Select>
              </VirtualizedSelect>
            </div>
          </div>
          <div
            className="row"
          >
            <div
              className="Field"
            >
              <label>
                Asset
              </label>
              <VirtualizedSelect
                async={false}
                maxHeight={200}
                onChange={[Function]}
                optionHeight={35}
                options={Array []}
                placeholder="For example, ethereum..."
                value="santiment"
              >
                <Select
                  arrowRenderer={[Function]}
                  async={false}
                  autosize={true}
                  backspaceRemoves={true}
                  backspaceToRemoveMessage="Press backspace to remove {label}"
                  clearAllText="Clear all"
                  clearRenderer={[Function]}
                  clearValueText="Clear value"
                  clearable={true}
                  closeOnSelect={true}
                  deleteRemoves={true}
                  delimiter=","
                  disabled={false}
                  escapeClearsValue={true}
                  filterOptions={[Function]}
                  ignoreAccents={true}
                  ignoreCase={true}
                  inputProps={Object {}}
                  isLoading={false}
                  joinValues={false}
                  labelKey="label"
                  matchPos="any"
                  matchProp="any"
                  maxHeight={200}
                  menuBuffer={0}
                  menuRenderer={[Function]}
                  menuStyle={
                    Object {
                      "overflow": "hidden",
                    }
                  }
                  multi={false}
                  noResultsText="No results found"
                  onBlurResetsInput={true}
                  onChange={[Function]}
                  onCloseResetsInput={true}
                  onSelectResetsInput={true}
                  openOnClick={true}
                  optionComponent={[Function]}
                  optionHeight={35}
                  options={Array []}
                  pageSize={5}
                  placeholder="For example, ethereum..."
                  removeSelected={true}
                  required={false}
                  rtl={false}
                  scrollMenuIntoView={true}
                  searchable={true}
                  simpleValue={false}
                  tabSelectsValue={true}
                  trimFilter={true}
                  value="santiment"
                  valueComponent={[Function]}
                  valueKey="value"
                >
                  <div
                    className="Select is-clearable is-searchable Select--single"
                  >
                    <div
                      className="Select-control"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                    >
                      <div
                        className="Select-multi-value-wrapper"
                        id="react-select-4--value"
                      >
                        <div
                          className="Select-placeholder"
                        >
                          For example, ethereum...
                        </div>
                        <AutosizeInput
                          aria-activedescendant="react-select-4--value"
                          aria-expanded="false"
                          aria-haspopup="false"
                          aria-owns=""
                          className="Select-input"
                          injectStyles={true}
                          minWidth="5"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          role="combobox"
                          value=""
                        >
                          <div
                            className="Select-input"
                            style={
                              Object {
                                "display": "inline-block",
                              }
                            }
                          >
                            <input
                              aria-activedescendant="react-select-4--value"
                              aria-expanded="false"
                              aria-haspopup="false"
                              aria-owns=""
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              required={false}
                              role="combobox"
                              style={
                                Object {
                                  "boxSizing": "content-box",
                                  "width": "5px",
                                }
                              }
                              value=""
                            />
                            <div
                              style={
                                Object {
                                  "height": 0,
                                  "left": 0,
                                  "overflow": "scroll",
                                  "position": "absolute",
                                  "top": 0,
                                  "visibility": "hidden",
                                  "whiteSpace": "pre",
                                }
                              }
                            />
                          </div>
                        </AutosizeInput>
                      </div>
                      <span
                        className="Select-arrow-zone"
                        onMouseDown={[Function]}
                      >
                        <span
                          className="Select-arrow"
                          onMouseDown={[Function]}
                        />
                      </span>
                    </div>
                  </div>
                </Select>
              </VirtualizedSelect>
            </div>
          </div>
          <div
            className="row"
          >
            <div
              className="Field"
            >
              <label>
                Percentage amount
              </label>
              <FormikConnect(FieldInner)
                autoComplete="nope"
                component={[Function]}
                id="percentThreshold"
                name="percentThreshold"
                onBlur={[Function]}
                onChange={[Function]}
                placeholder="Setup percentage amount"
                type="number"
                value={5}
              >
                <FieldInner
                  autoComplete="nope"
                  component={[Function]}
                  formik={
                    Object {
                      "dirty": false,
                      "errors": Object {},
                      "handleBlur": [Function],
                      "handleChange": [Function],
                      "handleReset": [Function],
                      "handleSubmit": [Function],
                      "initialValues": Object {
                        "percentThreshold": 5,
                      },
                      "isSubmitting": false,
                      "isValid": true,
                      "isValidating": false,
                      "registerField": [Function],
                      "resetForm": [Function],
                      "setError": [Function],
                      "setErrors": [Function],
                      "setFieldError": [Function],
                      "setFieldTouched": [Function],
                      "setFieldValue": [Function],
                      "setFormikState": [Function],
                      "setStatus": [Function],
                      "setSubmitting": [Function],
                      "setTouched": [Function],
                      "setValues": [Function],
                      "status": undefined,
                      "submitCount": 0,
                      "submitForm": [Function],
                      "touched": Object {},
                      "unregisterField": [Function],
                      "validate": [Function],
                      "validateField": [Function],
                      "validateForm": [Function],
                      "validateOnBlur": true,
                      "validateOnChange": true,
                      "validationSchema": undefined,
                      "values": Object {
                        "percentThreshold": 5,
                      },
                    }
                  }
                  id="percentThreshold"
                  name="percentThreshold"
                  onBlur={[Function]}
                  onChange={[Function]}
                  placeholder="Setup percentage amount"
                  type="number"
                  value={5}
                >
                  <Input
                    autoComplete="nope"
                    field={
                      Object {
                        "name": "percentThreshold",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "value": 5,
                      }
                    }
                    form={
                      Object {
                        "dirty": false,
                        "errors": Object {},
                        "handleBlur": [Function],
                        "handleChange": [Function],
                        "handleReset": [Function],
                        "handleSubmit": [Function],
                        "initialValues": Object {
                          "percentThreshold": 5,
                        },
                        "isSubmitting": false,
                        "isValid": true,
                        "isValidating": false,
                        "registerField": [Function],
                        "resetForm": [Function],
                        "setError": [Function],
                        "setErrors": [Function],
                        "setFieldError": [Function],
                        "setFieldTouched": [Function],
                        "setFieldValue": [Function],
                        "setFormikState": [Function],
                        "setStatus": [Function],
                        "setSubmitting": [Function],
                        "setTouched": [Function],
                        "setValues": [Function],
                        "status": undefined,
                        "submitCount": 0,
                        "submitForm": [Function],
                        "touched": Object {},
                        "unregisterField": [Function],
                        "validateField": [Function],
                        "validateForm": [Function],
                        "validateOnBlur": true,
                        "validateOnChange": true,
                        "values": Object {
                          "percentThreshold": 5,
                        },
                      }
                    }
                    id="percentThreshold"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Setup percentage amount"
                    type="number"
                    value={5}
                  >
                    <input
                      autoComplete="nope"
                      className="_1IPSm9T9AJPJzazht4ZpOB   "
                      field={
                        Object {
                          "name": "percentThreshold",
                          "onBlur": [Function],
                          "onChange": [Function],
                          "value": 5,
                        }
                      }
                      form={
                        Object {
                          "dirty": false,
                          "errors": Object {},
                          "handleBlur": [Function],
                          "handleChange": [Function],
                          "handleReset": [Function],
                          "handleSubmit": [Function],
                          "initialValues": Object {
                            "percentThreshold": 5,
                          },
                          "isSubmitting": false,
                          "isValid": true,
                          "isValidating": false,
                          "registerField": [Function],
                          "resetForm": [Function],
                          "setError": [Function],
                          "setErrors": [Function],
                          "setFieldError": [Function],
                          "setFieldTouched": [Function],
                          "setFieldValue": [Function],
                          "setFormikState": [Function],
                          "setStatus": [Function],
                          "setSubmitting": [Function],
                          "setTouched": [Function],
                          "setValues": [Function],
                          "status": undefined,
                          "submitCount": 0,
                          "submitForm": [Function],
                          "touched": Object {},
                          "unregisterField": [Function],
                          "validateField": [Function],
                          "validateForm": [Function],
                          "validateOnBlur": true,
                          "validateOnChange": true,
                          "values": Object {
                            "percentThreshold": 5,
                          },
                        }
                      }
                      id="percentThreshold"
                      onBlur={[Function]}
                      onChange={[Function]}
                      placeholder="Setup percentage amount"
                      type="number"
                      value={5}
                    />
                  </Input>
                </FieldInner>
              </FormikConnect(FieldInner)>
            </div>
          </div>
          <div
            className="row"
          >
            <div
              className="Field"
            >
              <label>
                Message Frequency
              </label>
              <div>
                <span>
                  Once per
                </span>
                <Selector
                  className=""
                  defaultSelected="24h"
                  disabled={false}
                  id="cooldown"
                  onSelectOption={[Function]}
                  options={
                    Array [
                      "1h",
                      "24h",
                    ]
                  }
                >
                  <div
                    className="sZGpUFUm5IA87aBg_B_ux"
                  >
                    <SelectorItem
                      disabled={false}
                      isSelected={false}
                      key="1h"
                      name="1h"
                      setFilter={[Function]}
                      value="1h"
                    >
                      <div
                        className="NmCl-kc94qxevXpQt6njd"
                        onClick={[Function]}
                      >
                        1h
                      </div>
                    </SelectorItem>
                    <SelectorItem
                      disabled={false}
                      isSelected={true}
                      key="24h"
                      name="24h"
                      setFilter={[Function]}
                      value="24h"
                    >
                      <div
                        className="NmCl-kc94qxevXpQt6njd KKd1K3QiE4DFvL2aOk8h6"
                        onClick={[Function]}
                      >
                        24h
                      </div>
                    </SelectorItem>
                  </div>
                </Selector>
              </div>
            </div>
          </div>
          <div
            className="row"
          >
            <div
              className="Field"
            >
              <label>
                Notify me via
              </label>
              <div>
                <Checkboxes
                  defaultSelectedIndexes={
                    Array [
                      "Telegram",
                    ]
                  }
                  disabledIndexes={
                    Array [
                      "Email",
                    ]
                  }
                  onSelect={[Function]}
                  options={
                    Array [
                      "Email",
                      "Telegram",
                    ]
                  }
                  style={
                    Object {
                      "marginRight": "15px",
                    }
                  }
                >
                  <LabeledSelect
                    className=""
                    defaultSelectedIndexes={
                      Array [
                        "Telegram",
                      ]
                    }
                    disabledClassName="_3yUlQWLOXp4pjA1EXAiApH"
                    disabledIndexes={
                      Array [
                        "Email",
                      ]
                    }
                    labelClassName=""
                    labelOnRight={false}
                    onSelect={[Function]}
                    options={
                      Array [
                        "Email",
                        "Telegram",
                      ]
                    }
                    selectElement={<SelectElement />}
                    selectedClassName="_3Q1TuM4D0yF2z17YbJ-bOY"
                    stateReducer={[Function]}
                    style={
                      Object {
                        "marginRight": "15px",
                      }
                    }
                  >
                    <BaseSelect
                      as="div"
                      className=" "
                      defaultSelectedIndexes={
                        Array [
                          "Telegram",
                        ]
                      }
                      disabledClassName="_3yUlQWLOXp4pjA1EXAiApH"
                      disabledIndexes={
                        Array [
                          "Email",
                        ]
                      }
                      fluid={false}
                      onSelect={[Function]}
                      options={
                        Array [
                          Object {
                            "content": <React.Fragment>
                              <span
                                className="yaYVwRFKb892Hi3WaGvH4 "
                              >
                                Email
                              </span>
                              <SelectElement />
                            </React.Fragment>,
                            "index": "Email",
                          },
                          Object {
                            "content": <React.Fragment>
                              <span
                                className="yaYVwRFKb892Hi3WaGvH4 "
                              >
                                Telegram
                              </span>
                              <SelectElement />
                            </React.Fragment>,
                            "index": "Telegram",
                          },
                        ]
                      }
                      passSelectionIndexToItem={false}
                      selectedClassName="_3Q1TuM4D0yF2z17YbJ-bOY"
                      stateReducer={[Function]}
                      style={
                        Object {
                          "marginRight": "15px",
                        }
                      }
                    >
                      <div
                        className="PF5ZDscyIWaiF2v3Hlhdi   _3yUlQWLOXp4pjA1EXAiApH"
                        key="Email"
                        style={
                          Object {
                            "marginRight": "15px",
                          }
                        }
                      >
                        <span
                          className="yaYVwRFKb892Hi3WaGvH4 "
                        >
                          Email
                        </span>
                        <SelectElement>
                          <div
                            className="_3vbk38B4TbCY9JlW9iDDCI"
                          >
                            <Icon
                              className="DW7Vel-nSBz80UVT7aM8A"
                              type="checkmark"
                            >
                              <IconCheckmark
                                className="DW7Vel-nSBz80UVT7aM8A"
                              >
                                <svg
                                  className="DW7Vel-nSBz80UVT7aM8A"
                                  height="6"
                                  viewBox="0 0 8 6"
                                  width="8"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    clipRule="evenodd"
                                    d="M7.76582 0.205537C8.06651 0.49041 8.07934 0.965111 7.79447 1.26581C6.9163 2.19276 5.8542 3.31734 5.01146 4.21037C4.59013 4.65685 4.22371 5.04536 3.96262 5.32226L3.54628 5.7639C3.40251 5.91645 3.20101 6.00236 2.99141 5.99995C2.7818 5.99755 2.58276 5.90754 2.44254 5.75173L0.192536 3.25173C-0.0845584 2.94384 -0.0595996 2.46963 0.248283 2.19253C0.556165 1.91544 1.03038 1.9404 1.30748 2.24828L3.01281 4.1431C3.25822 3.88287 3.57043 3.55187 3.92053 3.18087C4.76345 2.28765 5.82635 1.16223 6.70554 0.234193C6.99042 -0.0665062 7.46512 -0.0793359 7.76582 0.205537Z"
                                    fillRule="evenodd"
                                  />
                                </svg>
                              </IconCheckmark>
                            </Icon>
                          </div>
                        </SelectElement>
                      </div>
                      <div
                        className="PF5ZDscyIWaiF2v3Hlhdi   _3Q1TuM4D0yF2z17YbJ-bOY"
                        key="Telegram"
                        onClick={[Function]}
                        style={
                          Object {
                            "marginRight": "15px",
                          }
                        }
                      >
                        <span
                          className="yaYVwRFKb892Hi3WaGvH4 "
                        >
                          Telegram
                        </span>
                        <SelectElement>
                          <div
                            className="_3vbk38B4TbCY9JlW9iDDCI"
                          >
                            <Icon
                              className="DW7Vel-nSBz80UVT7aM8A"
                              type="checkmark"
                            >
                              <IconCheckmark
                                className="DW7Vel-nSBz80UVT7aM8A"
                              >
                                <svg
                                  className="DW7Vel-nSBz80UVT7aM8A"
                                  height="6"
                                  viewBox="0 0 8 6"
                                  width="8"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    clipRule="evenodd"
                                    d="M7.76582 0.205537C8.06651 0.49041 8.07934 0.965111 7.79447 1.26581C6.9163 2.19276 5.8542 3.31734 5.01146 4.21037C4.59013 4.65685 4.22371 5.04536 3.96262 5.32226L3.54628 5.7639C3.40251 5.91645 3.20101 6.00236 2.99141 5.99995C2.7818 5.99755 2.58276 5.90754 2.44254 5.75173L0.192536 3.25173C-0.0845584 2.94384 -0.0595996 2.46963 0.248283 2.19253C0.556165 1.91544 1.03038 1.9404 1.30748 2.24828L3.01281 4.1431C3.25822 3.88287 3.57043 3.55187 3.92053 3.18087C4.76345 2.28765 5.82635 1.16223 6.70554 0.234193C6.99042 -0.0665062 7.46512 -0.0793359 7.76582 0.205537Z"
                                    fillRule="evenodd"
                                  />
                                </svg>
                              </IconCheckmark>
                            </Icon>
                          </div>
                        </SelectElement>
                      </div>
                    </BaseSelect>
                  </LabeledSelect>
                </Checkboxes>
              </div>
            </div>
          </div>
          <div
            className="controls"
          >
            <Button
              accent="positive"
              as="button"
              border={false}
              className=""
              disabled={false}
              fluid={false}
              isActive={true}
              type="submit"
              variant="fill"
            >
              <button
                className=" _1yqRwElkvB0W_-4efoQrfz _2xB6_v9MitgcnKQKkrxVxN _1f54bcrwPHI-rWj5KLu4cI _3Ip8UvG9dsSl5Apx55CTIs"
                type="submit"
              >
                Continue
              </button>
            </Button>
          </div>
        </form>
      </Component>
    </Form>
  </Formik>
</TriggerForm>
`;
